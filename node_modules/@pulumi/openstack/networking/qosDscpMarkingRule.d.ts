import * as pulumi from "@pulumi/pulumi";
/**
 * Manages a V2 Neutron QoS DSCP marking rule resource within OpenStack.
 *
 * ## Example Usage
 * ### Create a QoS Policy with some DSCP marking rule
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as openstack from "@pulumi/openstack";
 *
 * const qosPolicy1 = new openstack.networking.QosPolicy("qos_policy_1", {
 *     description: "dscp_mark",
 * });
 * const dscpMarkingRule1 = new openstack.networking.QosDscpMarkingRule("dscp_marking_rule_1", {
 *     dscpMark: 26,
 *     qosPolicyId: qosPolicy1.id,
 * });
 * ```
 *
 * ## Import
 *
 * QoS DSCP marking rules can be imported using the `qos_policy_id/dscp_marking_rule_id` format, e.g.
 *
 * ```sh
 *  $ pulumi import openstack:networking/qosDscpMarkingRule:QosDscpMarkingRule dscp_marking_rule_1 d6ae28ce-fcb5-4180-aa62-d260a27e09ae/46dfb556-b92f-48ce-94c5-9a9e2140de94
 * ```
 */
export declare class QosDscpMarkingRule extends pulumi.CustomResource {
    /**
     * Get an existing QosDscpMarkingRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: QosDscpMarkingRuleState, opts?: pulumi.CustomResourceOptions): QosDscpMarkingRule;
    /**
     * Returns true if the given object is an instance of QosDscpMarkingRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is QosDscpMarkingRule;
    /**
     * The value of DSCP mark. Changing this updates the DSCP mark value existing
     * QoS DSCP marking rule.
     */
    readonly dscpMark: pulumi.Output<number>;
    /**
     * The QoS policy reference. Changing this creates a new QoS DSCP marking rule.
     */
    readonly qosPolicyId: pulumi.Output<string>;
    /**
     * The region in which to obtain the V2 Networking client.
     * A Networking client is needed to create a Neutron QoS DSCP marking rule. If omitted, the
     * `region` argument of the provider is used. Changing this creates a new QoS DSCP marking rule.
     */
    readonly region: pulumi.Output<string>;
    /**
     * Create a QosDscpMarkingRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: QosDscpMarkingRuleArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering QosDscpMarkingRule resources.
 */
export interface QosDscpMarkingRuleState {
    /**
     * The value of DSCP mark. Changing this updates the DSCP mark value existing
     * QoS DSCP marking rule.
     */
    dscpMark?: pulumi.Input<number>;
    /**
     * The QoS policy reference. Changing this creates a new QoS DSCP marking rule.
     */
    qosPolicyId?: pulumi.Input<string>;
    /**
     * The region in which to obtain the V2 Networking client.
     * A Networking client is needed to create a Neutron QoS DSCP marking rule. If omitted, the
     * `region` argument of the provider is used. Changing this creates a new QoS DSCP marking rule.
     */
    region?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a QosDscpMarkingRule resource.
 */
export interface QosDscpMarkingRuleArgs {
    /**
     * The value of DSCP mark. Changing this updates the DSCP mark value existing
     * QoS DSCP marking rule.
     */
    dscpMark: pulumi.Input<number>;
    /**
     * The QoS policy reference. Changing this creates a new QoS DSCP marking rule.
     */
    qosPolicyId: pulumi.Input<string>;
    /**
     * The region in which to obtain the V2 Networking client.
     * A Networking client is needed to create a Neutron QoS DSCP marking rule. If omitted, the
     * `region` argument of the provider is used. Changing this creates a new QoS DSCP marking rule.
     */
    region?: pulumi.Input<string>;
}
