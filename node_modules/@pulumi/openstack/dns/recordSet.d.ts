import * as pulumi from "@pulumi/pulumi";
/**
 * Manages a DNS record set in the OpenStack DNS Service.
 *
 * ## Example Usage
 * ### Automatically detect the correct network
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as openstack from "@pulumi/openstack";
 *
 * const exampleZone = new openstack.dns.Zone("example_zone", {
 *     description: "a zone",
 *     email: "email2@example.com",
 *     ttl: 6000,
 *     type: "PRIMARY",
 * });
 * const rsExampleCom = new openstack.dns.RecordSet("rs_example_com", {
 *     description: "An example record set",
 *     records: ["10.0.0.1"],
 *     ttl: 3000,
 *     type: "A",
 *     zoneId: exampleZone.id,
 * });
 * ```
 *
 * ## Import
 *
 * This resource can be imported by specifying the zone ID and recordset ID, separated by a forward slash.
 *
 * ```sh
 *  $ pulumi import openstack:dns/recordSet:RecordSet recordset_1 <zone_id>/<recordset_id>
 * ```
 */
export declare class RecordSet extends pulumi.CustomResource {
    /**
     * Get an existing RecordSet resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RecordSetState, opts?: pulumi.CustomResourceOptions): RecordSet;
    /**
     * Returns true if the given object is an instance of RecordSet.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is RecordSet;
    /**
     * A description of the  record set.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * Disable wait for recordset to reach ACTIVE
     * status. This argumen is disabled by default. If it is set to true, the recordset
     * will be considered as created/updated/deleted if OpenStack request returned success.
     */
    readonly disableStatusCheck: pulumi.Output<boolean | undefined>;
    /**
     * The name of the record set. Note the `.` at the end of the name.
     * Changing this creates a new DNS  record set.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The ID of the project DNS zone is created
     * for, sets `X-Auth-Sudo-Tenant-ID` header (requires an assigned
     * user role in target project)
     */
    readonly projectId: pulumi.Output<string>;
    /**
     * An array of DNS records. _Note:_ if an IPv6 address
     * contains brackets (`[ ]`), the brackets will be stripped and the modified
     * address will be recorded in the state.
     */
    readonly records: pulumi.Output<string[] | undefined>;
    /**
     * The region in which to obtain the V2 DNS client.
     * If omitted, the `region` argument of the provider is used.
     * Changing this creates a new DNS  record set.
     */
    readonly region: pulumi.Output<string>;
    /**
     * The time to live (TTL) of the record set.
     */
    readonly ttl: pulumi.Output<number>;
    /**
     * The type of record set. Examples: "A", "MX".
     * Changing this creates a new DNS  record set.
     */
    readonly type: pulumi.Output<string>;
    /**
     * Map of additional options. Changing this creates a
     * new record set.
     */
    readonly valueSpecs: pulumi.Output<{
        [key: string]: any;
    } | undefined>;
    /**
     * The ID of the zone in which to create the record set.
     * Changing this creates a new DNS  record set.
     */
    readonly zoneId: pulumi.Output<string>;
    /**
     * Create a RecordSet resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RecordSetArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering RecordSet resources.
 */
export interface RecordSetState {
    /**
     * A description of the  record set.
     */
    description?: pulumi.Input<string>;
    /**
     * Disable wait for recordset to reach ACTIVE
     * status. This argumen is disabled by default. If it is set to true, the recordset
     * will be considered as created/updated/deleted if OpenStack request returned success.
     */
    disableStatusCheck?: pulumi.Input<boolean>;
    /**
     * The name of the record set. Note the `.` at the end of the name.
     * Changing this creates a new DNS  record set.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the project DNS zone is created
     * for, sets `X-Auth-Sudo-Tenant-ID` header (requires an assigned
     * user role in target project)
     */
    projectId?: pulumi.Input<string>;
    /**
     * An array of DNS records. _Note:_ if an IPv6 address
     * contains brackets (`[ ]`), the brackets will be stripped and the modified
     * address will be recorded in the state.
     */
    records?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The region in which to obtain the V2 DNS client.
     * If omitted, the `region` argument of the provider is used.
     * Changing this creates a new DNS  record set.
     */
    region?: pulumi.Input<string>;
    /**
     * The time to live (TTL) of the record set.
     */
    ttl?: pulumi.Input<number>;
    /**
     * The type of record set. Examples: "A", "MX".
     * Changing this creates a new DNS  record set.
     */
    type?: pulumi.Input<string>;
    /**
     * Map of additional options. Changing this creates a
     * new record set.
     */
    valueSpecs?: pulumi.Input<{
        [key: string]: any;
    }>;
    /**
     * The ID of the zone in which to create the record set.
     * Changing this creates a new DNS  record set.
     */
    zoneId?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a RecordSet resource.
 */
export interface RecordSetArgs {
    /**
     * A description of the  record set.
     */
    description?: pulumi.Input<string>;
    /**
     * Disable wait for recordset to reach ACTIVE
     * status. This argumen is disabled by default. If it is set to true, the recordset
     * will be considered as created/updated/deleted if OpenStack request returned success.
     */
    disableStatusCheck?: pulumi.Input<boolean>;
    /**
     * The name of the record set. Note the `.` at the end of the name.
     * Changing this creates a new DNS  record set.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the project DNS zone is created
     * for, sets `X-Auth-Sudo-Tenant-ID` header (requires an assigned
     * user role in target project)
     */
    projectId?: pulumi.Input<string>;
    /**
     * An array of DNS records. _Note:_ if an IPv6 address
     * contains brackets (`[ ]`), the brackets will be stripped and the modified
     * address will be recorded in the state.
     */
    records?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The region in which to obtain the V2 DNS client.
     * If omitted, the `region` argument of the provider is used.
     * Changing this creates a new DNS  record set.
     */
    region?: pulumi.Input<string>;
    /**
     * The time to live (TTL) of the record set.
     */
    ttl?: pulumi.Input<number>;
    /**
     * The type of record set. Examples: "A", "MX".
     * Changing this creates a new DNS  record set.
     */
    type?: pulumi.Input<string>;
    /**
     * Map of additional options. Changing this creates a
     * new record set.
     */
    valueSpecs?: pulumi.Input<{
        [key: string]: any;
    }>;
    /**
     * The ID of the zone in which to create the record set.
     * Changing this creates a new DNS  record set.
     */
    zoneId: pulumi.Input<string>;
}
