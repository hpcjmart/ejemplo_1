import * as pulumi from "@pulumi/pulumi";
/**
 * Manages a DNS zone transfer accept in the OpenStack DNS Service.
 *
 * ## Example Usage
 * ### Automatically detect the correct network
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as openstack from "@pulumi/openstack";
 *
 * const exampleZone = new openstack.dns.Zone("example_zone", {
 *     description: "An example zone",
 *     email: "jdoe@example.com",
 *     ttl: 3000,
 *     type: "PRIMARY",
 * });
 * const request1 = new openstack.dns.TransferRequest("request_1", {
 *     description: "a transfer accept",
 *     zoneId: exampleZone.id,
 * });
 * const accept1 = new openstack.dns.TransferAccept("accept_1", {
 *     key: request1.key,
 *     zoneTransferRequestId: request1.id,
 * });
 * ```
 *
 * ## Import
 *
 * This resource can be imported by specifying the transferAccept ID
 *
 * ```sh
 *  $ pulumi import openstack:dns/transferAccept:TransferAccept accept_1 <accept_id>
 * ```
 */
export declare class TransferAccept extends pulumi.CustomResource {
    /**
     * Get an existing TransferAccept resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TransferAcceptState, opts?: pulumi.CustomResourceOptions): TransferAccept;
    /**
     * Returns true if the given object is an instance of TransferAccept.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is TransferAccept;
    /**
     * Disable wait for zone to reach ACTIVE
     * status. The check is enabled by default. If this argument is true, zone
     * will be considered as created/updated if OpenStack accept returned success.
     */
    readonly disableStatusCheck: pulumi.Output<boolean | undefined>;
    /**
     * The transfer key.
     */
    readonly key: pulumi.Output<string>;
    /**
     * The region in which to obtain the V2 Compute client.
     * Keypairs are associated with accounts, but a Compute client is needed to
     * create one. If omitted, the `region` argument of the provider is used.
     * Changing this creates a new DNS zone.
     */
    readonly region: pulumi.Output<string>;
    /**
     * Map of additional options. Changing this creates a
     * new transfer accept.
     */
    readonly valueSpecs: pulumi.Output<{
        [key: string]: any;
    } | undefined>;
    /**
     * The ID of the zone transfer request.
     */
    readonly zoneTransferRequestId: pulumi.Output<string>;
    /**
     * Create a TransferAccept resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TransferAcceptArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering TransferAccept resources.
 */
export interface TransferAcceptState {
    /**
     * Disable wait for zone to reach ACTIVE
     * status. The check is enabled by default. If this argument is true, zone
     * will be considered as created/updated if OpenStack accept returned success.
     */
    disableStatusCheck?: pulumi.Input<boolean>;
    /**
     * The transfer key.
     */
    key?: pulumi.Input<string>;
    /**
     * The region in which to obtain the V2 Compute client.
     * Keypairs are associated with accounts, but a Compute client is needed to
     * create one. If omitted, the `region` argument of the provider is used.
     * Changing this creates a new DNS zone.
     */
    region?: pulumi.Input<string>;
    /**
     * Map of additional options. Changing this creates a
     * new transfer accept.
     */
    valueSpecs?: pulumi.Input<{
        [key: string]: any;
    }>;
    /**
     * The ID of the zone transfer request.
     */
    zoneTransferRequestId?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a TransferAccept resource.
 */
export interface TransferAcceptArgs {
    /**
     * Disable wait for zone to reach ACTIVE
     * status. The check is enabled by default. If this argument is true, zone
     * will be considered as created/updated if OpenStack accept returned success.
     */
    disableStatusCheck?: pulumi.Input<boolean>;
    /**
     * The transfer key.
     */
    key: pulumi.Input<string>;
    /**
     * The region in which to obtain the V2 Compute client.
     * Keypairs are associated with accounts, but a Compute client is needed to
     * create one. If omitted, the `region` argument of the provider is used.
     * Changing this creates a new DNS zone.
     */
    region?: pulumi.Input<string>;
    /**
     * Map of additional options. Changing this creates a
     * new transfer accept.
     */
    valueSpecs?: pulumi.Input<{
        [key: string]: any;
    }>;
    /**
     * The ID of the zone transfer request.
     */
    zoneTransferRequestId: pulumi.Input<string>;
}
