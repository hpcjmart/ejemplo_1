/**
 * If set to `false`, OpenStack authorization won't be perfomed automatically, if the initial auth token get expired.
 * Defaults to `true`
 */
export declare const allowReauth: boolean | undefined;
/**
 * Application Credential ID to login with.
 */
export declare const applicationCredentialId: string | undefined;
/**
 * Application Credential name to login with.
 */
export declare const applicationCredentialName: string | undefined;
/**
 * Application Credential secret to login with.
 */
export declare const applicationCredentialSecret: string | undefined;
/**
 * The Identity authentication URL.
 */
export declare const authUrl: string | undefined;
/**
 * A Custom CA certificate.
 */
export declare const cacertFile: string | undefined;
/**
 * A client certificate to authenticate with.
 */
export declare const cert: string | undefined;
/**
 * An entry in a `clouds.yaml` file to use.
 */
export declare const cloud: string | undefined;
/**
 * The name of the Domain ID to scope to if no other domain is specified. Defaults to `default` (Identity v3).
 */
export declare const defaultDomain: string | undefined;
/**
 * If set to `false`, OpenStack authorization will be perfomed, every time the service provider client is called. Defaults
 * to `true`.
 */
export declare const delayedAuth: boolean | undefined;
/**
 * If set to `true`, the HTTP `Cache-Control: no-cache` header will not be added by default to all API requests.
 */
export declare const disableNoCacheHeader: boolean | undefined;
/**
 * The ID of the Domain to scope to (Identity v3).
 */
export declare const domainId: string | undefined;
/**
 * The name of the Domain to scope to (Identity v3).
 */
export declare const domainName: string | undefined;
/**
 * Outputs very verbose logs with all calls made to and responses from OpenStack
 */
export declare const enableLogging: boolean | undefined;
/**
 * A map of services with an endpoint to override what was from the Keystone catalog
 */
export declare const endpointOverrides: {
    [key: string]: any;
} | undefined;
export declare const endpointType: string | undefined;
/**
 * Trust self-signed certificates.
 */
export declare const insecure: boolean | undefined;
/**
 * A client private key to authenticate with.
 */
export declare const key: string | undefined;
/**
 * How many times HTTP connection should be retried until giving up.
 */
export declare const maxRetries: number | undefined;
/**
 * Password to login with.
 */
export declare const password: string | undefined;
/**
 * The ID of the domain where the proejct resides (Identity v3).
 */
export declare const projectDomainId: string | undefined;
/**
 * The name of the domain where the project resides (Identity v3).
 */
export declare const projectDomainName: string | undefined;
/**
 * The OpenStack region to connect to.
 */
export declare const region: string | undefined;
/**
 * Use Swift's authentication system instead of Keystone. Only used for interaction with Swift.
 */
export declare const swauth: boolean | undefined;
/**
 * The ID of the Tenant (Identity v2) or Project (Identity v3) to login with.
 */
export declare const tenantId: string | undefined;
/**
 * The name of the Tenant (Identity v2) or Project (Identity v3) to login with.
 */
export declare const tenantName: string | undefined;
/**
 * Authentication token to use as an alternative to username/password.
 */
export declare const token: string | undefined;
/**
 * If set to `true`, API requests will go the Load Balancer service (Octavia) instead of the Networking service (Neutron).
 */
export declare const useOctavia: boolean | undefined;
/**
 * The ID of the domain where the user resides (Identity v3).
 */
export declare const userDomainId: string | undefined;
/**
 * The name of the domain where the user resides (Identity v3).
 */
export declare const userDomainName: string | undefined;
/**
 * Username to login with.
 */
export declare const userId: string | undefined;
/**
 * Username to login with.
 */
export declare const userName: string | undefined;
