import * as pulumi from "@pulumi/pulumi";
/**
 * Manages a V2 listener resource within OpenStack.
 *
 * > **Note:** This resource has attributes that depend on octavia minor versions.
 * Please ensure your Openstack cloud supports the required minor version.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as openstack from "@pulumi/openstack";
 *
 * const listener1 = new openstack.loadbalancer.Listener("listener_1", {
 *     insertHeaders: {
 *         "X-Forwarded-For": "true",
 *     },
 *     loadbalancerId: "d9415786-5f1a-428b-b35f-2f1523e146d2",
 *     protocol: "HTTP",
 *     protocolPort: 8080,
 * });
 * ```
 *
 * ## Import
 *
 * Load Balancer Listener can be imported using the Listener ID, e.g.
 *
 * ```sh
 *  $ pulumi import openstack:loadbalancer/listener:Listener listener_1 b67ce64e-8b26-405d-afeb-4a078901f15a
 * ```
 */
export declare class Listener extends pulumi.CustomResource {
    /**
     * Get an existing Listener resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ListenerState, opts?: pulumi.CustomResourceOptions): Listener;
    /**
     * Returns true if the given object is an instance of Listener.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Listener;
    /**
     * The administrative state of the Listener.
     * A valid value is true (UP) or false (DOWN).
     */
    readonly adminStateUp: pulumi.Output<boolean | undefined>;
    /**
     * A list of CIDR blocks that are permitted to connect to this listener, denying
     * all other source addresses. If not present, defaults to allow all.
     */
    readonly allowedCidrs: pulumi.Output<string[] | undefined>;
    /**
     * The maximum number of connections allowed
     * for the Listener.
     */
    readonly connectionLimit: pulumi.Output<number>;
    /**
     * The ID of the default pool with which the
     * Listener is associated.
     */
    readonly defaultPoolId: pulumi.Output<string>;
    /**
     * A reference to a Barbican Secrets
     * container which stores TLS information. This is required if the protocol
     * is `TERMINATED_HTTPS`. See
     * [here](https://wiki.openstack.org/wiki/Network/LBaaS/docs/how-to-create-tls-loadbalancer)
     * for more information.
     */
    readonly defaultTlsContainerRef: pulumi.Output<string | undefined>;
    /**
     * Human-readable description for the Listener.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * The list of key value pairs representing headers to insert
     * into the request before it is sent to the backend members. Changing this updates the headers of the
     * existing listener.
     */
    readonly insertHeaders: pulumi.Output<{
        [key: string]: any;
    } | undefined>;
    /**
     * The load balancer on which to provision this
     * Listener. Changing this creates a new Listener.
     */
    readonly loadbalancerId: pulumi.Output<string>;
    /**
     * Human-readable name for the Listener. Does not have
     * to be unique.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The protocol - can either be TCP, HTTP, HTTPS,
     * TERMINATED_HTTPS, UDP (supported only in Octavia) or SCTP (supported only
     * in **Octavia minor version >= 2.23**). Changing this creates a new Listener.
     */
    readonly protocol: pulumi.Output<string>;
    /**
     * The port on which to listen for client traffic.
     * Changing this creates a new Listener.
     */
    readonly protocolPort: pulumi.Output<number>;
    /**
     * The region in which to obtain the V2 Networking client.
     * A Networking client is needed to create an . If omitted, the
     * `region` argument of the provider is used. Changing this creates a new
     * Listener.
     */
    readonly region: pulumi.Output<string>;
    /**
     * A list of references to Barbican Secrets
     * containers which store SNI information. See
     * [here](https://wiki.openstack.org/wiki/Network/LBaaS/docs/how-to-create-tls-loadbalancer)
     * for more information.
     */
    readonly sniContainerRefs: pulumi.Output<string[] | undefined>;
    /**
     * Required for admins. The UUID of the tenant who owns
     * the Listener.  Only administrative users can specify a tenant UUID
     * other than their own. Changing this creates a new Listener.
     */
    readonly tenantId: pulumi.Output<string>;
    /**
     * The client inactivity timeout in milliseconds.
     */
    readonly timeoutClientData: pulumi.Output<number>;
    /**
     * The member connection timeout in milliseconds.
     */
    readonly timeoutMemberConnect: pulumi.Output<number>;
    /**
     * The member inactivity timeout in milliseconds.
     */
    readonly timeoutMemberData: pulumi.Output<number>;
    /**
     * The time in milliseconds, to wait for additional
     * TCP packets for content inspection.
     */
    readonly timeoutTcpInspect: pulumi.Output<number>;
    /**
     * Create a Listener resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ListenerArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering Listener resources.
 */
export interface ListenerState {
    /**
     * The administrative state of the Listener.
     * A valid value is true (UP) or false (DOWN).
     */
    adminStateUp?: pulumi.Input<boolean>;
    /**
     * A list of CIDR blocks that are permitted to connect to this listener, denying
     * all other source addresses. If not present, defaults to allow all.
     */
    allowedCidrs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The maximum number of connections allowed
     * for the Listener.
     */
    connectionLimit?: pulumi.Input<number>;
    /**
     * The ID of the default pool with which the
     * Listener is associated.
     */
    defaultPoolId?: pulumi.Input<string>;
    /**
     * A reference to a Barbican Secrets
     * container which stores TLS information. This is required if the protocol
     * is `TERMINATED_HTTPS`. See
     * [here](https://wiki.openstack.org/wiki/Network/LBaaS/docs/how-to-create-tls-loadbalancer)
     * for more information.
     */
    defaultTlsContainerRef?: pulumi.Input<string>;
    /**
     * Human-readable description for the Listener.
     */
    description?: pulumi.Input<string>;
    /**
     * The list of key value pairs representing headers to insert
     * into the request before it is sent to the backend members. Changing this updates the headers of the
     * existing listener.
     */
    insertHeaders?: pulumi.Input<{
        [key: string]: any;
    }>;
    /**
     * The load balancer on which to provision this
     * Listener. Changing this creates a new Listener.
     */
    loadbalancerId?: pulumi.Input<string>;
    /**
     * Human-readable name for the Listener. Does not have
     * to be unique.
     */
    name?: pulumi.Input<string>;
    /**
     * The protocol - can either be TCP, HTTP, HTTPS,
     * TERMINATED_HTTPS, UDP (supported only in Octavia) or SCTP (supported only
     * in **Octavia minor version >= 2.23**). Changing this creates a new Listener.
     */
    protocol?: pulumi.Input<string>;
    /**
     * The port on which to listen for client traffic.
     * Changing this creates a new Listener.
     */
    protocolPort?: pulumi.Input<number>;
    /**
     * The region in which to obtain the V2 Networking client.
     * A Networking client is needed to create an . If omitted, the
     * `region` argument of the provider is used. Changing this creates a new
     * Listener.
     */
    region?: pulumi.Input<string>;
    /**
     * A list of references to Barbican Secrets
     * containers which store SNI information. See
     * [here](https://wiki.openstack.org/wiki/Network/LBaaS/docs/how-to-create-tls-loadbalancer)
     * for more information.
     */
    sniContainerRefs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Required for admins. The UUID of the tenant who owns
     * the Listener.  Only administrative users can specify a tenant UUID
     * other than their own. Changing this creates a new Listener.
     */
    tenantId?: pulumi.Input<string>;
    /**
     * The client inactivity timeout in milliseconds.
     */
    timeoutClientData?: pulumi.Input<number>;
    /**
     * The member connection timeout in milliseconds.
     */
    timeoutMemberConnect?: pulumi.Input<number>;
    /**
     * The member inactivity timeout in milliseconds.
     */
    timeoutMemberData?: pulumi.Input<number>;
    /**
     * The time in milliseconds, to wait for additional
     * TCP packets for content inspection.
     */
    timeoutTcpInspect?: pulumi.Input<number>;
}
/**
 * The set of arguments for constructing a Listener resource.
 */
export interface ListenerArgs {
    /**
     * The administrative state of the Listener.
     * A valid value is true (UP) or false (DOWN).
     */
    adminStateUp?: pulumi.Input<boolean>;
    /**
     * A list of CIDR blocks that are permitted to connect to this listener, denying
     * all other source addresses. If not present, defaults to allow all.
     */
    allowedCidrs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The maximum number of connections allowed
     * for the Listener.
     */
    connectionLimit?: pulumi.Input<number>;
    /**
     * The ID of the default pool with which the
     * Listener is associated.
     */
    defaultPoolId?: pulumi.Input<string>;
    /**
     * A reference to a Barbican Secrets
     * container which stores TLS information. This is required if the protocol
     * is `TERMINATED_HTTPS`. See
     * [here](https://wiki.openstack.org/wiki/Network/LBaaS/docs/how-to-create-tls-loadbalancer)
     * for more information.
     */
    defaultTlsContainerRef?: pulumi.Input<string>;
    /**
     * Human-readable description for the Listener.
     */
    description?: pulumi.Input<string>;
    /**
     * The list of key value pairs representing headers to insert
     * into the request before it is sent to the backend members. Changing this updates the headers of the
     * existing listener.
     */
    insertHeaders?: pulumi.Input<{
        [key: string]: any;
    }>;
    /**
     * The load balancer on which to provision this
     * Listener. Changing this creates a new Listener.
     */
    loadbalancerId: pulumi.Input<string>;
    /**
     * Human-readable name for the Listener. Does not have
     * to be unique.
     */
    name?: pulumi.Input<string>;
    /**
     * The protocol - can either be TCP, HTTP, HTTPS,
     * TERMINATED_HTTPS, UDP (supported only in Octavia) or SCTP (supported only
     * in **Octavia minor version >= 2.23**). Changing this creates a new Listener.
     */
    protocol: pulumi.Input<string>;
    /**
     * The port on which to listen for client traffic.
     * Changing this creates a new Listener.
     */
    protocolPort: pulumi.Input<number>;
    /**
     * The region in which to obtain the V2 Networking client.
     * A Networking client is needed to create an . If omitted, the
     * `region` argument of the provider is used. Changing this creates a new
     * Listener.
     */
    region?: pulumi.Input<string>;
    /**
     * A list of references to Barbican Secrets
     * containers which store SNI information. See
     * [here](https://wiki.openstack.org/wiki/Network/LBaaS/docs/how-to-create-tls-loadbalancer)
     * for more information.
     */
    sniContainerRefs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Required for admins. The UUID of the tenant who owns
     * the Listener.  Only administrative users can specify a tenant UUID
     * other than their own. Changing this creates a new Listener.
     */
    tenantId?: pulumi.Input<string>;
    /**
     * The client inactivity timeout in milliseconds.
     */
    timeoutClientData?: pulumi.Input<number>;
    /**
     * The member connection timeout in milliseconds.
     */
    timeoutMemberConnect?: pulumi.Input<number>;
    /**
     * The member inactivity timeout in milliseconds.
     */
    timeoutMemberData?: pulumi.Input<number>;
    /**
     * The time in milliseconds, to wait for additional
     * TCP packets for content inspection.
     */
    timeoutTcpInspect?: pulumi.Input<number>;
}
