"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.Members = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Manages a V2 members resource within OpenStack (batch members update).
 *
 * > **Note:** This resource has attributes that depend on octavia minor versions.
 * Please ensure your Openstack cloud supports the required minor version.
 *
 * > **Note:** This resource works only within Octavia API. For
 * legacy Neutron LBaaS v2 extension please use
 * openstack.loadbalancer.Member resource.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as openstack from "@pulumi/openstack";
 *
 * const members1 = new openstack.loadbalancer.Members("members_1", {
 *     members: [
 *         {
 *             address: "192.168.199.23",
 *             protocolPort: 8080,
 *         },
 *         {
 *             address: "192.168.199.24",
 *             protocolPort: 8080,
 *         },
 *     ],
 *     poolId: "935685fb-a896-40f9-9ff4-ae531a3a00fe",
 * });
 * ```
 *
 * ## Import
 *
 * Load Balancer Pool Members can be imported using the Pool ID, e.g.
 *
 * ```sh
 *  $ pulumi import openstack:loadbalancer/members:Members members_1 c22974d2-4c95-4bcb-9819-0afc5ed303d5
 * ```
 */
class Members extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["members"] = state ? state.members : undefined;
            resourceInputs["poolId"] = state ? state.poolId : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.poolId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'poolId'");
            }
            resourceInputs["members"] = args ? args.members : undefined;
            resourceInputs["poolId"] = args ? args.poolId : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Members.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing Members resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new Members(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of Members.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Members.__pulumiType;
    }
}
exports.Members = Members;
/** @internal */
Members.__pulumiType = 'openstack:loadbalancer/members:Members';
//# sourceMappingURL=members.js.map