"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.Ec2CredentialV3 = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * ## Import
 *
 * EC2 Credentials can be imported using the `access`, e.g.
 *
 * ```sh
 *  $ pulumi import openstack:identity/ec2CredentialV3:Ec2CredentialV3 ec2_cred_1 2d0ac4a2f81b4b0f9513ee49e780647d
 * ```
 */
class Ec2CredentialV3 extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["access"] = state ? state.access : undefined;
            resourceInputs["projectId"] = state ? state.projectId : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["secret"] = state ? state.secret : undefined;
            resourceInputs["trustId"] = state ? state.trustId : undefined;
            resourceInputs["userId"] = state ? state.userId : undefined;
        }
        else {
            const args = argsOrState;
            resourceInputs["projectId"] = args ? args.projectId : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["userId"] = args ? args.userId : undefined;
            resourceInputs["access"] = undefined /*out*/;
            resourceInputs["secret"] = undefined /*out*/;
            resourceInputs["trustId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Ec2CredentialV3.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing Ec2CredentialV3 resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new Ec2CredentialV3(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of Ec2CredentialV3.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Ec2CredentialV3.__pulumiType;
    }
}
exports.Ec2CredentialV3 = Ec2CredentialV3;
/** @internal */
Ec2CredentialV3.__pulumiType = 'openstack:identity/ec2CredentialV3:Ec2CredentialV3';
//# sourceMappingURL=ec2CredentialV3.js.map