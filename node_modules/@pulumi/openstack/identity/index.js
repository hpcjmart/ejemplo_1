"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
// Export members:
__exportStar(require("./applicationCredential"), exports);
__exportStar(require("./ec2CredentialV3"), exports);
__exportStar(require("./endpointV3"), exports);
__exportStar(require("./getAuthScope"), exports);
__exportStar(require("./getEndpoint"), exports);
__exportStar(require("./getGroup"), exports);
__exportStar(require("./getProject"), exports);
__exportStar(require("./getRole"), exports);
__exportStar(require("./getService"), exports);
__exportStar(require("./getUser"), exports);
__exportStar(require("./groupV3"), exports);
__exportStar(require("./project"), exports);
__exportStar(require("./role"), exports);
__exportStar(require("./roleAssignment"), exports);
__exportStar(require("./serviceV3"), exports);
__exportStar(require("./user"), exports);
__exportStar(require("./userMembershipV3"), exports);
// Import resources to register:
const applicationCredential_1 = require("./applicationCredential");
const ec2CredentialV3_1 = require("./ec2CredentialV3");
const endpointV3_1 = require("./endpointV3");
const groupV3_1 = require("./groupV3");
const project_1 = require("./project");
const role_1 = require("./role");
const roleAssignment_1 = require("./roleAssignment");
const serviceV3_1 = require("./serviceV3");
const user_1 = require("./user");
const userMembershipV3_1 = require("./userMembershipV3");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "openstack:identity/applicationCredential:ApplicationCredential":
                return new applicationCredential_1.ApplicationCredential(name, undefined, { urn });
            case "openstack:identity/ec2CredentialV3:Ec2CredentialV3":
                return new ec2CredentialV3_1.Ec2CredentialV3(name, undefined, { urn });
            case "openstack:identity/endpointV3:EndpointV3":
                return new endpointV3_1.EndpointV3(name, undefined, { urn });
            case "openstack:identity/groupV3:GroupV3":
                return new groupV3_1.GroupV3(name, undefined, { urn });
            case "openstack:identity/project:Project":
                return new project_1.Project(name, undefined, { urn });
            case "openstack:identity/role:Role":
                return new role_1.Role(name, undefined, { urn });
            case "openstack:identity/roleAssignment:RoleAssignment":
                return new roleAssignment_1.RoleAssignment(name, undefined, { urn });
            case "openstack:identity/serviceV3:ServiceV3":
                return new serviceV3_1.ServiceV3(name, undefined, { urn });
            case "openstack:identity/user:User":
                return new user_1.User(name, undefined, { urn });
            case "openstack:identity/userMembershipV3:UserMembershipV3":
                return new userMembershipV3_1.UserMembershipV3(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("openstack", "identity/applicationCredential", _module);
pulumi.runtime.registerResourceModule("openstack", "identity/ec2CredentialV3", _module);
pulumi.runtime.registerResourceModule("openstack", "identity/endpointV3", _module);
pulumi.runtime.registerResourceModule("openstack", "identity/groupV3", _module);
pulumi.runtime.registerResourceModule("openstack", "identity/project", _module);
pulumi.runtime.registerResourceModule("openstack", "identity/role", _module);
pulumi.runtime.registerResourceModule("openstack", "identity/roleAssignment", _module);
pulumi.runtime.registerResourceModule("openstack", "identity/serviceV3", _module);
pulumi.runtime.registerResourceModule("openstack", "identity/user", _module);
pulumi.runtime.registerResourceModule("openstack", "identity/userMembershipV3", _module);
//# sourceMappingURL=index.js.map