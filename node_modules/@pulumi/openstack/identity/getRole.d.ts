import * as pulumi from "@pulumi/pulumi";
/**
 * Use this data source to get the ID of an OpenStack role.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as openstack from "@pulumi/openstack";
 *
 * const admin = pulumi.output(openstack.identity.getRole({
 *     name: "admin",
 * }));
 * ```
 */
export declare function getRole(args: GetRoleArgs, opts?: pulumi.InvokeOptions): Promise<GetRoleResult>;
/**
 * A collection of arguments for invoking getRole.
 */
export interface GetRoleArgs {
    /**
     * The domain the role belongs to.
     */
    domainId?: string;
    /**
     * The name of the role.
     */
    name: string;
    /**
     * The region in which to obtain the V3 Keystone client.
     * If omitted, the `region` argument of the provider is used.
     */
    region?: string;
}
/**
 * A collection of values returned by getRole.
 */
export interface GetRoleResult {
    /**
     * See Argument Reference above.
     */
    readonly domainId: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * See Argument Reference above.
     */
    readonly name: string;
    /**
     * See Argument Reference above.
     */
    readonly region: string;
}
export declare function getRoleOutput(args: GetRoleOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRoleResult>;
/**
 * A collection of arguments for invoking getRole.
 */
export interface GetRoleOutputArgs {
    /**
     * The domain the role belongs to.
     */
    domainId?: pulumi.Input<string>;
    /**
     * The name of the role.
     */
    name: pulumi.Input<string>;
    /**
     * The region in which to obtain the V3 Keystone client.
     * If omitted, the `region` argument of the provider is used.
     */
    region?: pulumi.Input<string>;
}
