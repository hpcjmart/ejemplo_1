"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.ApplicationCredential = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * ## Import
 *
 * Application Credentials can be imported using the `id`, e.g.
 *
 * ```sh
 *  $ pulumi import openstack:identity/applicationCredential:ApplicationCredential application_credential_1 c17304b7-0953-4738-abb0-67005882b0a0
 * ```
 */
class ApplicationCredential extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["accessRules"] = state ? state.accessRules : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["expiresAt"] = state ? state.expiresAt : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["projectId"] = state ? state.projectId : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["roles"] = state ? state.roles : undefined;
            resourceInputs["secret"] = state ? state.secret : undefined;
            resourceInputs["unrestricted"] = state ? state.unrestricted : undefined;
        }
        else {
            const args = argsOrState;
            resourceInputs["accessRules"] = args ? args.accessRules : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["expiresAt"] = args ? args.expiresAt : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["roles"] = args ? args.roles : undefined;
            resourceInputs["secret"] = args ? args.secret : undefined;
            resourceInputs["unrestricted"] = args ? args.unrestricted : undefined;
            resourceInputs["projectId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ApplicationCredential.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing ApplicationCredential resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new ApplicationCredential(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of ApplicationCredential.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ApplicationCredential.__pulumiType;
    }
}
exports.ApplicationCredential = ApplicationCredential;
/** @internal */
ApplicationCredential.__pulumiType = 'openstack:identity/applicationCredential:ApplicationCredential';
//# sourceMappingURL=applicationCredential.js.map