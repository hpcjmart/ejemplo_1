"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getAuthScopeOutput = exports.getAuthScope = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Use this data source to get authentication information about the current
 * auth scope in use. This can be used as self-discovery or introspection of
 * the username or project name currently in use as well as the service catalog.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as openstack from "@pulumi/openstack";
 *
 * const scope = pulumi.output(openstack.identity.getAuthScope({
 *     name: "my_scope",
 * }));
 * ```
 *
 * To find the the public object storage endpoint for "region1" as listed in the
 * service catalog:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 *
 * const objectStoreService = .filter(entry => entry.type == "object-store").map(entry => entry)[0];
 * const objectStoreEndpoint = .filter(endpoint => endpoint["interface"] == "public" && endpoint.region == "region1").map(endpoint => endpoint)[0];
 * const objectStorePublicUrl = objectStoreEndpoint.url;
 * ```
 */
function getAuthScope(args, opts) {
    if (!opts) {
        opts = {};
    }
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("openstack:identity/getAuthScope:getAuthScope", {
        "name": args.name,
        "region": args.region,
    }, opts);
}
exports.getAuthScope = getAuthScope;
function getAuthScopeOutput(args, opts) {
    return pulumi.output(args).apply(a => getAuthScope(a, opts));
}
exports.getAuthScopeOutput = getAuthScopeOutput;
//# sourceMappingURL=getAuthScope.js.map