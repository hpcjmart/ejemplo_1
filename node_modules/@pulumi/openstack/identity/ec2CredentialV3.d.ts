import * as pulumi from "@pulumi/pulumi";
/**
 * ## Import
 *
 * EC2 Credentials can be imported using the `access`, e.g.
 *
 * ```sh
 *  $ pulumi import openstack:identity/ec2CredentialV3:Ec2CredentialV3 ec2_cred_1 2d0ac4a2f81b4b0f9513ee49e780647d
 * ```
 */
export declare class Ec2CredentialV3 extends pulumi.CustomResource {
    /**
     * Get an existing Ec2CredentialV3 resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: Ec2CredentialV3State, opts?: pulumi.CustomResourceOptions): Ec2CredentialV3;
    /**
     * Returns true if the given object is an instance of Ec2CredentialV3.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Ec2CredentialV3;
    /**
     * contains an EC2 credential access UUID
     */
    readonly access: pulumi.Output<string>;
    /**
     * The ID of the project the EC2 credential is created
     * for and that authentication requests using this EC2 credential will
     * be scoped to.
     */
    readonly projectId: pulumi.Output<string>;
    /**
     * The region in which to obtain the V3 Keystone client.
     * If omitted, the `region` argument of the provider is used. Changing this
     * creates a new EC2 credential.
     */
    readonly region: pulumi.Output<string>;
    /**
     * contains an EC2 credential secret UUID
     */
    readonly secret: pulumi.Output<string>;
    /**
     * contains an EC2 credential trust ID scope
     */
    readonly trustId: pulumi.Output<string>;
    /**
     * The ID of the user the EC2 credential is created for.
     */
    readonly userId: pulumi.Output<string>;
    /**
     * Create a Ec2CredentialV3 resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: Ec2CredentialV3Args, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering Ec2CredentialV3 resources.
 */
export interface Ec2CredentialV3State {
    /**
     * contains an EC2 credential access UUID
     */
    access?: pulumi.Input<string>;
    /**
     * The ID of the project the EC2 credential is created
     * for and that authentication requests using this EC2 credential will
     * be scoped to.
     */
    projectId?: pulumi.Input<string>;
    /**
     * The region in which to obtain the V3 Keystone client.
     * If omitted, the `region` argument of the provider is used. Changing this
     * creates a new EC2 credential.
     */
    region?: pulumi.Input<string>;
    /**
     * contains an EC2 credential secret UUID
     */
    secret?: pulumi.Input<string>;
    /**
     * contains an EC2 credential trust ID scope
     */
    trustId?: pulumi.Input<string>;
    /**
     * The ID of the user the EC2 credential is created for.
     */
    userId?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a Ec2CredentialV3 resource.
 */
export interface Ec2CredentialV3Args {
    /**
     * The ID of the project the EC2 credential is created
     * for and that authentication requests using this EC2 credential will
     * be scoped to.
     */
    projectId?: pulumi.Input<string>;
    /**
     * The region in which to obtain the V3 Keystone client.
     * If omitted, the `region` argument of the provider is used. Changing this
     * creates a new EC2 credential.
     */
    region?: pulumi.Input<string>;
    /**
     * The ID of the user the EC2 credential is created for.
     */
    userId?: pulumi.Input<string>;
}
