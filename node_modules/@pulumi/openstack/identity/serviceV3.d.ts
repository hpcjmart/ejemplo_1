import * as pulumi from "@pulumi/pulumi";
/**
 * Manages a V3 Service resource within OpenStack Keystone.
 *
 * > **Note:** This usually requires admin privileges.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as openstack from "@pulumi/openstack";
 *
 * const service1 = new openstack.identity.ServiceV3("service_1", {
 *     type: "custom",
 * });
 * ```
 *
 * ## Import
 *
 * Services can be imported using the `id`, e.g.
 *
 * ```sh
 *  $ pulumi import openstack:identity/serviceV3:ServiceV3 service_1 6688e967-158a-496f-a224-cae3414e6b61
 * ```
 */
export declare class ServiceV3 extends pulumi.CustomResource {
    /**
     * Get an existing ServiceV3 resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ServiceV3State, opts?: pulumi.CustomResourceOptions): ServiceV3;
    /**
     * Returns true if the given object is an instance of ServiceV3.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ServiceV3;
    /**
     * The service description.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * The service status. Defaults to `true`.
     */
    readonly enabled: pulumi.Output<boolean | undefined>;
    /**
     * The service name.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The region in which to obtain the V3 Keystone client.
     * If omitted, the `region` argument of the provider is used.
     */
    readonly region: pulumi.Output<string>;
    /**
     * The service type.
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a ServiceV3 resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ServiceV3Args, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering ServiceV3 resources.
 */
export interface ServiceV3State {
    /**
     * The service description.
     */
    description?: pulumi.Input<string>;
    /**
     * The service status. Defaults to `true`.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The service name.
     */
    name?: pulumi.Input<string>;
    /**
     * The region in which to obtain the V3 Keystone client.
     * If omitted, the `region` argument of the provider is used.
     */
    region?: pulumi.Input<string>;
    /**
     * The service type.
     */
    type?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a ServiceV3 resource.
 */
export interface ServiceV3Args {
    /**
     * The service description.
     */
    description?: pulumi.Input<string>;
    /**
     * The service status. Defaults to `true`.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The service name.
     */
    name?: pulumi.Input<string>;
    /**
     * The region in which to obtain the V3 Keystone client.
     * If omitted, the `region` argument of the provider is used.
     */
    region?: pulumi.Input<string>;
    /**
     * The service type.
     */
    type: pulumi.Input<string>;
}
