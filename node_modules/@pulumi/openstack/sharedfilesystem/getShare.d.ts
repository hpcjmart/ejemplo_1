import * as pulumi from "@pulumi/pulumi";
import { output as outputs } from "../types";
/**
 * Use this data source to get the ID of an available Shared File System share.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as openstack from "@pulumi/openstack";
 *
 * const share1 = pulumi.output(openstack.sharedfilesystem.getShare({
 *     name: "share_1",
 * }));
 * ```
 */
export declare function getShare(args?: GetShareArgs, opts?: pulumi.InvokeOptions): Promise<GetShareResult>;
/**
 * A collection of arguments for invoking getShare.
 */
export interface GetShareArgs {
    /**
     * The human-readable description for the share.
     */
    description?: string;
    /**
     * The export location path of the share. Available
     * since Manila API version 2.35.
     */
    exportLocationPath?: string;
    /**
     * The level of visibility for the share.
     * length.
     */
    isPublic?: boolean;
    /**
     * One or more metadata key and value pairs as a dictionary of
     * strings.
     */
    metadata?: {
        [key: string]: any;
    };
    /**
     * The name of the share.
     */
    name?: string;
    /**
     * The region in which to obtain the V2 Shared File System client.
     */
    region?: string;
    /**
     * The UUID of the share's share network.
     */
    shareNetworkId?: string;
    /**
     * The UUID of the share's base snapshot.
     */
    snapshotId?: string;
    /**
     * A share status filter. A valid value is `creating`,
     * `error`, `available`, `deleting`, `errorDeleting`, `manageStarting`,
     * `manageError`, `unmanageStarting`, `unmanageError`, `unmanaged`,
     * `extending`, `extendingError`, `shrinking`, `shrinkingError`, or
     * `shrinkingPossibleDataLossError`.
     */
    status?: string;
}
/**
 * A collection of values returned by getShare.
 */
export interface GetShareResult {
    /**
     * The share availability zone.
     */
    readonly availabilityZone: string;
    /**
     * See Argument Reference above.
     */
    readonly description: string;
    /**
     * See Argument Reference above.
     */
    readonly exportLocationPath?: string;
    /**
     * A list of export locations. For example, when a share
     * server has more than one network interface, it can have multiple export
     * locations.
     */
    readonly exportLocations: outputs.sharedfilesystem.GetShareExportLocation[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * See Argument Reference above.
     */
    readonly isPublic: boolean;
    /**
     * See Argument Reference above.
     */
    readonly metadata: {
        [key: string]: any;
    };
    /**
     * See Argument Reference above.
     */
    readonly name: string;
    /**
     * See Argument Reference above.
     */
    readonly projectId: string;
    /**
     * The region in which to obtain the V2 Shared File System client.
     */
    readonly region: string;
    /**
     * See Argument Reference above.
     */
    readonly shareNetworkId: string;
    /**
     * The share protocol.
     */
    readonly shareProto: string;
    /**
     * The share size, in GBs.
     */
    readonly size: number;
    /**
     * See Argument Reference above.
     */
    readonly snapshotId: string;
    /**
     * See Argument Reference above.
     */
    readonly status: string;
}
export declare function getShareOutput(args?: GetShareOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetShareResult>;
/**
 * A collection of arguments for invoking getShare.
 */
export interface GetShareOutputArgs {
    /**
     * The human-readable description for the share.
     */
    description?: pulumi.Input<string>;
    /**
     * The export location path of the share. Available
     * since Manila API version 2.35.
     */
    exportLocationPath?: pulumi.Input<string>;
    /**
     * The level of visibility for the share.
     * length.
     */
    isPublic?: pulumi.Input<boolean>;
    /**
     * One or more metadata key and value pairs as a dictionary of
     * strings.
     */
    metadata?: pulumi.Input<{
        [key: string]: any;
    }>;
    /**
     * The name of the share.
     */
    name?: pulumi.Input<string>;
    /**
     * The region in which to obtain the V2 Shared File System client.
     */
    region?: pulumi.Input<string>;
    /**
     * The UUID of the share's share network.
     */
    shareNetworkId?: pulumi.Input<string>;
    /**
     * The UUID of the share's base snapshot.
     */
    snapshotId?: pulumi.Input<string>;
    /**
     * A share status filter. A valid value is `creating`,
     * `error`, `available`, `deleting`, `errorDeleting`, `manageStarting`,
     * `manageError`, `unmanageStarting`, `unmanageError`, `unmanaged`,
     * `extending`, `extendingError`, `shrinking`, `shrinkingError`, or
     * `shrinkingPossibleDataLossError`.
     */
    status?: pulumi.Input<string>;
}
