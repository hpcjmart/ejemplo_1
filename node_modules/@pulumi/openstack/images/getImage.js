"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getImageOutput = exports.getImage = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Use this data source to get the ID of an available OpenStack image.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as openstack from "@pulumi/openstack";
 *
 * const ubuntu = pulumi.output(openstack.images.getImage({
 *     mostRecent: true,
 *     name: "Ubuntu 16.04",
 *     properties: {
 *         key: "value",
 *     },
 * }));
 * ```
 */
function getImage(args, opts) {
    args = args || {};
    if (!opts) {
        opts = {};
    }
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("openstack:images/getImage:getImage", {
        "hidden": args.hidden,
        "memberStatus": args.memberStatus,
        "mostRecent": args.mostRecent,
        "name": args.name,
        "owner": args.owner,
        "properties": args.properties,
        "region": args.region,
        "sizeMax": args.sizeMax,
        "sizeMin": args.sizeMin,
        "sortDirection": args.sortDirection,
        "sortKey": args.sortKey,
        "tag": args.tag,
        "visibility": args.visibility,
    }, opts);
}
exports.getImage = getImage;
function getImageOutput(args, opts) {
    return pulumi.output(args).apply(a => getImage(a, opts));
}
exports.getImageOutput = getImageOutput;
//# sourceMappingURL=getImage.js.map