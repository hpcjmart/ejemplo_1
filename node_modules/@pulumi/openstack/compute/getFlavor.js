"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getFlavorOutput = exports.getFlavor = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Use this data source to get the ID of an available OpenStack flavor.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as openstack from "@pulumi/openstack";
 *
 * const small = pulumi.output(openstack.compute.getFlavor({
 *     ram: 512,
 *     vcpus: 1,
 * }));
 * ```
 */
function getFlavor(args, opts) {
    args = args || {};
    if (!opts) {
        opts = {};
    }
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("openstack:compute/getFlavor:getFlavor", {
        "disk": args.disk,
        "flavorId": args.flavorId,
        "isPublic": args.isPublic,
        "minDisk": args.minDisk,
        "minRam": args.minRam,
        "name": args.name,
        "ram": args.ram,
        "region": args.region,
        "rxTxFactor": args.rxTxFactor,
        "swap": args.swap,
        "vcpus": args.vcpus,
    }, opts);
}
exports.getFlavor = getFlavor;
function getFlavorOutput(args, opts) {
    return pulumi.output(args).apply(a => getFlavor(a, opts));
}
exports.getFlavorOutput = getFlavorOutput;
//# sourceMappingURL=getFlavor.js.map