"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.QosV3 = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Manages a V3 block storage Quality-Of-Servirce (qos) resource within OpenStack.
 *
 * > **Note:** This usually requires admin privileges.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as openstack from "@pulumi/openstack";
 *
 * const qos = new openstack.blockstorage.QosV3("qos", {
 *     consumer: "back-end",
 *     specs: {
 *         read_iops_sec: "40000",
 *         write_iops_sec: "40000",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Qos can be imported using the `qos_id`, e.g.
 *
 * ```sh
 *  $ pulumi import openstack:blockstorage/qosV3:QosV3 qos 941793f0-0a34-4bc4-b72e-a6326ae58283
 * ```
 */
class QosV3 extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["consumer"] = state ? state.consumer : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["specs"] = state ? state.specs : undefined;
        }
        else {
            const args = argsOrState;
            resourceInputs["consumer"] = args ? args.consumer : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["specs"] = args ? args.specs : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(QosV3.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing QosV3 resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new QosV3(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of QosV3.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === QosV3.__pulumiType;
    }
}
exports.QosV3 = QosV3;
/** @internal */
QosV3.__pulumiType = 'openstack:blockstorage/qosV3:QosV3';
//# sourceMappingURL=qosV3.js.map